[provider]
name = "aura"
elevated = true

[provider.detection]
binary = "aura"
files = ["/etc/pacman.conf", "/var/lib/pacman"]
distributions = ["arch"]

[provider.commands]
install = "-A --noconfirm" # -A for AUR install
update = "-Au --noconfirm" # -Au for AUR updates
remove = "-R --noconfirm"  # -R to remove packages
list = "-Qm"               # -Qm to list foreign (AUR) packages
search = "-As"             # -As for AUR search
clean = "-Cc --noconfirm"  # -Cc for complete cache clean

[provider.corePackages]
openssl = ["openssl"]
build-essentials = [
  "base-devel",
  "cmake",
  "freetype2",
  "fontconfig",
  "pkg-config",
  "libxcb",
  "libxkbcommon",
  "python",
]

[provider.repository.paths]
sources = "/etc/pacman.d"
keys = "/etc/pacman.d/gnupg"

[[provider.install.steps]]
action = "command"
exec = "pacman"
args = ["-S", "--needed", "--noconfirm", "base-devel", "git"]

[[provider.install.steps]]
action = "command"
exec = "git"
args = ["clone", "https://aur.archlinux.org/aura-bin.git", "/tmp/aura"]

[[provider.install.steps]]
action = "command"
exec = "sh"
args = ["-c", "cd /tmp/aura && makepkg -si --noconfirm"]

[[provider.remove.steps]]
action = "command"
exec = "pacman"
args = ["-Rns", "--noconfirm", "aura"]

[[provider.repository.add.steps]]
action = "write"
dest = "/etc/pacman.conf"
content = """
[{{ .Name }}]
Server = {{ .URL }}
"""

[[provider.repository.add.steps]]
action = "command"
exec = "pacman-key"
args = ["--recv-keys", "{{ .KeyID }}"]

[[provider.repository.add.steps]]
action = "command"
exec = "pacman-key"
args = ["--lsign-key", "{{ .KeyID }}"]

[[provider.repository.remove.steps]]
action = "command"
exec = "pacman-key"
args = ["--delete", "{{ .KeyID }}"]

[[provider.repository.remove.steps]]
action = "remove_section"
path = "/etc/pacman.conf"
section = "{{ .Name }}"
